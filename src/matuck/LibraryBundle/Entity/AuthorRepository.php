<?php

namespace matuck\LibraryBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Pagerfanta\Pagerfanta;
use Pagerfanta\Adapter\DoctrineORMAdapter;

/**
 * AuthorRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AuthorRepository extends EntityRepository
{   
    public function findAll()
    {
        $qb = $this->createQueryBuilder('a')
               ->orderBy('a.name', 'ASC');
        
        return $qb->getQuery()->iterate();
    }
    
    public function findAllPagedOrderbyVotes()
    {
        $qb = $this->createQueryBuilder('a')
                ->select('a, count(v.id) as votecount')
                ->leftJoin('a.authorvotes', 'v')
                ->groupBy('a.id')
                ->orderBy('votecount', 'DESC');
        
        $adapter = new DoctrineORMAdapter($qb);      
        return new Pagerfanta($adapter);
    }
    
    public function totalauthorcount()
    {
        $qb = $this->createQueryBuilder('a')
                ->select('count(a.id)');
        
        return $qb->getQuery()->getSingleScalarResult();
    }
    
    public function getlastauthordate()
    {
        $qb = $this->createQueryBuilder('a')
    		->select('MAX(a.createdAt)');
        
        return $qb->getQuery()->getSingleScalarResult();
    }
    
    public function findAllPagerOrderbyName()
    {
        $qb = $this->createQueryBuilder('a')
                ->orderBy('a.name', 'ASC');
        $adapter = new DoctrineORMAdapter($qb);
        
        return new Pagerfanta($adapter);
    }
    
    public function findByFirstLetterPaged($letter)
    {
        $qb = $this->createQueryBuilder('a')
                ->andWhere('a.name LIKE :letter')
                ->orderBy('a.name', 'ASC')
                ->setParameter('letter', $letter.'%');
        
        $adapter = new DoctrineORMAdapter($qb);
        
        return new Pagerfanta($adapter);
    }
}
