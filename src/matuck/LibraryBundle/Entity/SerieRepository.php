<?php

namespace matuck\LibraryBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Pagerfanta\Pagerfanta;
use Pagerfanta\Adapter\DoctrineORMAdapter;

/**
 * SerieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SerieRepository extends EntityRepository
{
    public function findAll()
    {
        $qb = $this->createQueryBuilder('s')
               ->orderBy('s.name', 'ASC');
        
        return $qb->getQuery()->iterate();
    }
    
    public function findAllPaged()
    {
        $qb = $this->createQueryBuilder('s')
                ->orderBy('s.name', 'ASC');
        
        $adapter = new DoctrineORMAdapter($qb);
        return new Pagerfanta($adapter);
    }
    
    public function getlastseriedate()
    {
        $qb = $this->createQueryBuilder('s')
    		->select('MAX(s.createdAt)');
        
        return $qb->getQuery()->getSingleScalarResult();
    }
    
    public function findAllPagerOrderbyName()
    {
        $qb = $this->createQueryBuilder('s')
                ->orderBy('s.name', 'ASC');
        $adapter = new DoctrineORMAdapter($qb);
        
        return new Pagerfanta($adapter);
    }
    
    public function findByBookswithNumber()
    {
        $qb = $this->createQueryBuilder('s')
                ->orderBy('s.name', 'ASC');
        $qb->andWhere($qb->expr()->like('s.name', $qb->expr()->literal('0%')).' OR '.$qb->expr()->like('s.name', $qb->expr()->literal('1%')).' OR '.$qb->expr()->like('s.name', $qb->expr()->literal('2%')).' OR '.$qb->expr()->like('s.name', $qb->expr()->literal('3%')).' OR '.$qb->expr()->like('s.name', $qb->expr()->literal('4%')).' OR '.$qb->expr()->like('s.name', $qb->expr()->literal('5%')).' OR '.$qb->expr()->like('s.name', $qb->expr()->literal('6%')).' OR '.$qb->expr()->like('s.name', $qb->expr()->literal('7%')).' OR '.$qb->expr()->like('s.name', $qb->expr()->literal('8%')).' OR '.$qb->expr()->like('s.name', $qb->expr()->literal('9%')));
        $adapter = new DoctrineORMAdapter($qb);
        
        return new Pagerfanta($adapter);
    }
    
    public function findByFirstLetterPaged($letter)
    {
        $qb = $this->createQueryBuilder('s')
                ->andWhere('s.name LIKE :letter')
                ->orderBy('s.name', 'ASC')
                ->setParameter('letter', $letter.'%');
        
        $adapter = new DoctrineORMAdapter($qb);
        
        return new Pagerfanta($adapter);
    }
}
